package layeredAdvisorgui;

import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.ArrayList;


public class AdvisorGUI extends javax.swing.JFrame  {
    
    AdvisorController con = new AdvisorController();
    ArrayList list = new ArrayList();
    MemberRepoImpl memRepo = new MemberRepoImpl();
    Connection conn;
    
    /**
     * Creates new form ManagerGUI
     */
    public AdvisorGUI() {
        initComponents();

    }


    public AdvisorGUI(AdvisorController control, Connection connection) {
        initComponents();
        con = control; 
        conn = connection;
    }


 

    
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        refLabel = new javax.swing.JLabel();
        firestNameLabel = new javax.swing.JLabel();
        specLabel = new javax.swing.JLabel();
        ref = new javax.swing.JTextField();
        firstName = new javax.swing.JTextField();
        phone = new javax.swing.JTextField();
        surnameLabel = new javax.swing.JLabel();
        surname = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        memType = new javax.swing.JComboBox<>();
        add = new javax.swing.JButton();
        view = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        result = new javax.swing.JTextArea();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Advisor GUI"));

        refLabel.setText("Enter the Reference No.: ");

        firestNameLabel.setText("Enter the First Name: ");

        specLabel.setText("Enter the Phone No.: ");

        ref.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refActionPerformed(evt);
            }
        });

        firstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameActionPerformed(evt);
            }
        });

        surnameLabel.setText("Enter the Surname: ");

        surname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                surnameActionPerformed(evt);
            }
        });

        jLabel1.setText("Enter the Membership Type:");

        memType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Silver", "Gold", "Platinum" }));
        memType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memTypeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(refLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ref, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(memType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(specLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(phone))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(surnameLabel)
                            .addGap(18, 18, 18)
                            .addComponent(surname))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(firestNameLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refLabel)
                    .addComponent(ref, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firestNameLabel)
                    .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(surnameLabel)
                    .addComponent(surname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(specLabel)
                    .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(memType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        view.setText("View All");
        view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewActionPerformed(evt);
            }
        });

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        result.setColumns(20);
        result.setRows(5);
        jScrollPane1.setViewportView(result);

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(add)
                            .addComponent(view)
                            .addComponent(update)
                            .addComponent(delete)
                            .addComponent(exit))
                        .addGap(0, 16, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(add)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(view)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(update)
                        .addGap(13, 13, 13)
                        .addComponent(delete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(exit)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void addActionPerformed(java.awt.event.ActionEvent evt) {                                    
        //TODO add your handling code here:
        String theRef = ref.getText();
        String theFirstName = firstName.getText();
        String theSurname = surname.getText();
        String thePhone = phone.getText();
        String theMemType =  memType.getSelectedItem().toString();
        
        if (checkAnyEmptyFields(theRef, theFirstName, theSurname, thePhone)!=0){
            return;
        }
        if (checkValidPhone(thePhone)!=0){
            return;
        }
        
        if(checkValidReference(theRef)!=0){
            return;
        }
        
        
        int num = Integer.parseInt(theRef);
        con.register(num, theFirstName, theSurname, thePhone, theMemType);
       
        String data = "A new member is registered with ref no: " +
                ref.getText();
        data += ", First Name: " + firstName.getText();
        data += ", Surname: " + surname.getText();
        data += ", Phone number: " + phone.getText();
        data += ", Membership: " + memType.getSelectedItem().toString();
                
        result.setText(data);
        
        ref.setText("");
        firstName.setText("");
        surname.setText("");
        phone.setText("");
    }                                   

    private void viewActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        String data = con.viewAll();
        result.setText(data);
        
        ref.setText("");
        firstName.setText("");
        surname.setText("");
        phone.setText("");
    }                                    

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        try {
                if (con!=null){
                    //write the member objects to the database
                    memRepo.write(conn, con.getMemList());
                    conn.close();
                    System.out.println("Connection is closed.");
                    
                    System.exit(1);
                } else {
                    System.out.println("null");
                }
        } catch (SQLException ex) {
            System.out.println("Connection failed.");
        }
    }                                    
    
    private void firstNameActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void surnameActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void refActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
    }                                   

    private void memTypeActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        String theRef = ref.getText();
        if(checkValidReference(theRef)!=0){
            return;
        }
                
        String theMemType =  memType.getSelectedItem().toString();
        System.out.println(theRef.length());
            
        int num = Integer.parseInt(theRef);
       
        con.updateDetails(num, theMemType);
        result.setText("The member is updated.");
        
        ref.setText("");
        firstName.setText("");
        surname.setText("");
        phone.setText("");
    }                                      

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        String theRef = ref.getText();
        if(checkValidReference(theRef)!=0){
            return;
        }
        int num = Integer.parseInt(theRef);
        con.deleteDetails(num);
        result.setText("The member is deleted.");

        ref.setText("");
        firstName.setText("");
        surname.setText("");
        phone.setText("");
        
    }                                      

    
    /*
    Checks if the inputted string is a valid Reference (Atleast 1 character long and only numerical characters)
    */
    public int checkValidReference(String ref){
        if (ref.matches("^[0-9]*$") && ref.length() > 0){ 
            return 0;
        }
        JOptionPane.showMessageDialog(null, "Please enter a valid reference!", "ERROR", JOptionPane.WARNING_MESSAGE);//ERROR MESSAGE
        return 1;//invalid reference
    }
    
    
    /*
    Checks if there are any empty fields
    */
    public int checkAnyEmptyFields(String ref, String firstName, String surname, String phone){
        if (ref.length()<1 || firstName.length()<1 || surname.length()<1 || phone.length()<1){
            JOptionPane.showMessageDialog(null, "Please ensure that all field are filled!", "ERROR", JOptionPane.WARNING_MESSAGE);//ERROR MESSAGE
            return 1;
        }
        return 0;
    } 
    
    
    /*
    Checks if the inputted string is a valid phone number (Less than 17 integers long and only integer characters)
    */
    public int checkValidPhone(String phone){
        //matches numbers only
        if (phone.matches("^[0-9]*$") && phone.length()<17){
            return 0; // Valid phone number
        }
        
        JOptionPane.showMessageDialog(null, "Invalid phone number!", "ERROR", JOptionPane.WARNING_MESSAGE);//ERROR MESSAGE
        return 1;// invalid phone number
    }
    

    
    
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdvisorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdvisorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdvisorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdvisorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdvisorGUI().setVisible(false);//------
                MemberRepoImpl memRepo = new MemberRepoImpl();
                AdvisorController control = new AdvisorController();
                Connection conn;
                //sample code to demo the database connectio nand sql statements
                String connectionURL = "jdbc:derby://localhost:1527/LayeredExample2";
                String uName = "hunth4";
                String uPass = "123";
                //ConnectionUrl, username and password specifield in get Connection ()
                try {
                    conn = DriverManager.getConnection(connectionURL, uName, uPass);
                    System.out.println("Connect to database...");
                    if (conn != null){
                        ArrayList list = memRepo.read(conn);
                        control.setMemList(list);
                        
                        AdvisorGUI gui = new AdvisorGUI(control, conn);
                        gui.setVisible(true);
                    } else {
                        System.out.println("null");
                    }
                } catch (SQLException ex) {
                    System.out.println("Connection failed.");
                }
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton add;
    private javax.swing.JButton delete;
    private javax.swing.JButton exit;
    private javax.swing.JLabel firestNameLabel;
    private javax.swing.JTextField firstName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JComboBox<String> memType;
    private javax.swing.JTextField phone;
    private javax.swing.JTextField ref;
    private javax.swing.JLabel refLabel;
    private javax.swing.JTextArea result;
    private javax.swing.JLabel specLabel;
    private javax.swing.JTextField surname;
    private javax.swing.JLabel surnameLabel;
    private javax.swing.JButton update;
    private javax.swing.JButton view;
    // End of variables declaration                   
}


